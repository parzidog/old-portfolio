{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = [];\nexport const fetchJobsAsync = createAsyncThunk(\"allJobs\", async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/jobs`);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nexport const addJobAsync = createAsyncThunk(\"createJob\", async _ref => {\n  let {\n    fname,\n    lname,\n    email,\n    gpa,\n    imgUrl,\n    campusId\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios.post(`/api/jobs/`, {\n      fname,\n      lname,\n      email,\n      gpa,\n      imgUrl,\n      campusId\n    });\n    return data;\n  } catch (err) {\n    console.log(err.response);\n  }\n});\nexport const deleteJobAsync = createAsyncThunk(\"deleteJob\", async jobId => {\n  try {\n    const {\n      data\n    } = await axios.delete(`/api/jobs/${jobId}`);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nexport const editJobAsync = createAsyncThunk(\"editJob\", async _ref2 => {\n  let {\n    id,\n    fname,\n    lname,\n    email,\n    gpa,\n    imgUrl,\n    campusId\n  } = _ref2;\n  const {\n    data\n  } = await axios.put(`/api/jobs/${id}`, {\n    fname,\n    lname,\n    email,\n    gpa,\n    imgUrl,\n    campusId\n  });\n  return data;\n});\nconst jobsSlice = createSlice({\n  name: \"jobs\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchJobsAsync.fulfilled, (state, action) => {\n      // Add user to the state array\n      return action.payload;\n    });\n  }\n});\nexport const selectJobs = state => {\n  return state.jobs;\n};\nexport default jobsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","fetchJobsAsync","data","get","err","console","log","addJobAsync","fname","lname","email","gpa","imgUrl","campusId","post","response","deleteJobAsync","jobId","delete","editJobAsync","id","put","jobsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectJobs","jobs","reducer"],"sources":["/home/parzidog/fsa/asyncProject/portfolio/src/features/jobsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = [];\n\nexport const fetchJobsAsync = createAsyncThunk(\"allJobs\", async () => {\n  try {\n    const { data } = await axios.get(`/api/jobs`);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\n\nexport const addJobAsync = createAsyncThunk(\"createJob\", async ({fname, lname, email, gpa, imgUrl, campusId}) => {\n  try {\n    const { data } = await axios.post(`/api/jobs/`,{\n      fname,\n      lname,\n      email, \n      gpa,\n      imgUrl,\n      campusId\n    });\n    return data;\n  } catch (err) {\n    console.log(err.response);\n  }\n});\n\nexport const deleteJobAsync = createAsyncThunk(\"deleteJob\", async (jobId)=>{\n  try{\n    const { data } = await axios.delete(`/api/jobs/${jobId}`);\n    return data;\n  }\n  catch(err){\n    console.log(err)\n  }\n})\n\nexport const editJobAsync = createAsyncThunk(\n  \"editJob\",\n  async ({id,fname, lname, email, gpa, imgUrl, campusId}) => {\n    const { data } = await axios.put(`/api/jobs/${id}`, {\n      fname,\n      lname,\n      email, \n      gpa,\n      imgUrl,\n      campusId\n    });\n    return data;\n  }\n);\n\nconst jobsSlice = createSlice({\n  name: \"jobs\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchJobsAsync.fulfilled, (state, action) => {\n      // Add user to the state array\n      return action.payload;\n    });\n  },\n});\n\nexport const selectJobs = (state) => {\n  return state.jobs;\n};\n\nexport default jobsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAAC,SAAD,EAAY,YAAY;EACpE,IAAI;IACF,MAAM;MAAEI;IAAF,IAAW,MAAMH,KAAK,CAACI,GAAN,CAAW,WAAX,CAAvB;IACA,OAAOD,IAAP;EACD,CAHD,CAGE,OAAOE,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD;AACF,CAP6C,CAAvC;AASP,OAAO,MAAMG,WAAW,GAAGT,gBAAgB,CAAC,WAAD,EAAc,cAAwD;EAAA,IAAjD;IAACU,KAAD;IAAQC,KAAR;IAAeC,KAAf;IAAsBC,GAAtB;IAA2BC,MAA3B;IAAmCC;EAAnC,CAAiD;;EAC/G,IAAI;IACF,MAAM;MAAEX;IAAF,IAAW,MAAMH,KAAK,CAACe,IAAN,CAAY,YAAZ,EAAwB;MAC7CN,KAD6C;MAE7CC,KAF6C;MAG7CC,KAH6C;MAI7CC,GAJ6C;MAK7CC,MAL6C;MAM7CC;IAN6C,CAAxB,CAAvB;IAQA,OAAOX,IAAP;EACD,CAVD,CAUE,OAAOE,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACW,QAAhB;EACD;AACF,CAd0C,CAApC;AAgBP,OAAO,MAAMC,cAAc,GAAGlB,gBAAgB,CAAC,WAAD,EAAc,MAAOmB,KAAP,IAAe;EACzE,IAAG;IACD,MAAM;MAAEf;IAAF,IAAW,MAAMH,KAAK,CAACmB,MAAN,CAAc,aAAYD,KAAM,EAAhC,CAAvB;IACA,OAAOf,IAAP;EACD,CAHD,CAIA,OAAME,GAAN,EAAU;IACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD;AACF,CAR6C,CAAvC;AAUP,OAAO,MAAMe,YAAY,GAAGrB,gBAAgB,CAC1C,SAD0C,EAE1C,eAA2D;EAAA,IAApD;IAACsB,EAAD;IAAIZ,KAAJ;IAAWC,KAAX;IAAkBC,KAAlB;IAAyBC,GAAzB;IAA8BC,MAA9B;IAAsCC;EAAtC,CAAoD;EACzD,MAAM;IAAEX;EAAF,IAAW,MAAMH,KAAK,CAACsB,GAAN,CAAW,aAAYD,EAAG,EAA1B,EAA6B;IAClDZ,KADkD;IAElDC,KAFkD;IAGlDC,KAHkD;IAIlDC,GAJkD;IAKlDC,MALkD;IAMlDC;EANkD,CAA7B,CAAvB;EAQA,OAAOX,IAAP;AACD,CAZyC,CAArC;AAeP,MAAMoB,SAAS,GAAGzB,WAAW,CAAC;EAC5B0B,IAAI,EAAE,MADsB;EAE5BvB,YAF4B;EAG5BwB,QAAQ,EAAE,EAHkB;EAI5BC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgB1B,cAAc,CAAC2B,SAA/B,EAA0C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3D;MACA,OAAOA,MAAM,CAACC,OAAd;IACD,CAHD;EAID;AAT2B,CAAD,CAA7B;AAYA,OAAO,MAAMC,UAAU,GAAIH,KAAD,IAAW;EACnC,OAAOA,KAAK,CAACI,IAAb;AACD,CAFM;AAIP,eAAeX,SAAS,CAACY,OAAzB"},"metadata":{},"sourceType":"module"}