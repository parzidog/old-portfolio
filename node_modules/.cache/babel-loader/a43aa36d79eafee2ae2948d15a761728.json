{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = [];\nexport const fetchProjectsAsync = createAsyncThunk(\"allProjects\", async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/projects`);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nexport const addProjectAsync = createAsyncThunk(\"createProject\", async _ref => {\n  let {\n    fname,\n    lname,\n    email,\n    gpa,\n    imgUrl,\n    campusId\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios.post(`/api/projects/`, {\n      fname,\n      lname,\n      email,\n      gpa,\n      imgUrl,\n      campusId\n    });\n    return data;\n  } catch (err) {\n    console.log(err.response);\n  }\n});\nexport const deleteProjectAsync = createAsyncThunk(\"deleteProject\", async projectId => {\n  try {\n    const {\n      data\n    } = await axios.delete(`/api/projects/${projectId}`);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nexport const editProjectAsync = createAsyncThunk(\"editProject\", async _ref2 => {\n  let {\n    id,\n    fname,\n    lname,\n    email,\n    gpa,\n    imgUrl,\n    campusId\n  } = _ref2;\n  const {\n    data\n  } = await axios.put(`/api/projects/${id}`, {\n    fname,\n    lname,\n    email,\n    gpa,\n    imgUrl,\n    campusId\n  });\n  return data;\n});\nconst projectsSlice = createSlice({\n  name: \"projects\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProjectsAsync.fulfilled, (state, action) => {\n      // Add user to the state array\n      return action.payload;\n    });\n  }\n});\nexport const selectProjects = state => {\n  return state.projects;\n};\nexport default projectsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","fetchProjectsAsync","data","get","err","console","log","addProjectAsync","fname","lname","email","gpa","imgUrl","campusId","post","response","deleteProjectAsync","projectId","delete","editProjectAsync","id","put","projectsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectProjects","projects","reducer"],"sources":["/home/parzidog/fsa/asyncProject/portfolio/src/features/projectsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = [];\n\nexport const fetchProjectsAsync = createAsyncThunk(\"allProjects\", async () => {\n  try {\n    const { data } = await axios.get(`/api/projects`);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\n\nexport const addProjectAsync = createAsyncThunk(\"createProject\", async ({fname, lname, email, gpa, imgUrl, campusId}) => {\n  try {\n    const { data } = await axios.post(`/api/projects/`,{\n      fname,\n      lname,\n      email, \n      gpa,\n      imgUrl,\n      campusId\n    });\n    return data;\n  } catch (err) {\n    console.log(err.response);\n  }\n});\n\nexport const deleteProjectAsync = createAsyncThunk(\"deleteProject\", async (projectId)=>{\n  try{\n    const { data } = await axios.delete(`/api/projects/${projectId}`);\n    return data;\n  }\n  catch(err){\n    console.log(err)\n  }\n})\n\nexport const editProjectAsync = createAsyncThunk(\n  \"editProject\",\n  async ({id,fname, lname, email, gpa, imgUrl, campusId}) => {\n    const { data } = await axios.put(`/api/projects/${id}`, {\n      fname,\n      lname,\n      email, \n      gpa,\n      imgUrl,\n      campusId\n    });\n    return data;\n  }\n);\n\nconst projectsSlice = createSlice({\n  name: \"projects\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchProjectsAsync.fulfilled, (state, action) => {\n      // Add user to the state array\n      return action.payload;\n    });\n  },\n});\n\nexport const selectProjects = (state) => {\n  return state.projects;\n};\n\nexport default projectsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAAC,aAAD,EAAgB,YAAY;EAC5E,IAAI;IACF,MAAM;MAAEI;IAAF,IAAW,MAAMH,KAAK,CAACI,GAAN,CAAW,eAAX,CAAvB;IACA,OAAOD,IAAP;EACD,CAHD,CAGE,OAAOE,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD;AACF,CAPiD,CAA3C;AASP,OAAO,MAAMG,eAAe,GAAGT,gBAAgB,CAAC,eAAD,EAAkB,cAAwD;EAAA,IAAjD;IAACU,KAAD;IAAQC,KAAR;IAAeC,KAAf;IAAsBC,GAAtB;IAA2BC,MAA3B;IAAmCC;EAAnC,CAAiD;;EACvH,IAAI;IACF,MAAM;MAAEX;IAAF,IAAW,MAAMH,KAAK,CAACe,IAAN,CAAY,gBAAZ,EAA4B;MACjDN,KADiD;MAEjDC,KAFiD;MAGjDC,KAHiD;MAIjDC,GAJiD;MAKjDC,MALiD;MAMjDC;IANiD,CAA5B,CAAvB;IAQA,OAAOX,IAAP;EACD,CAVD,CAUE,OAAOE,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACW,QAAhB;EACD;AACF,CAd8C,CAAxC;AAgBP,OAAO,MAAMC,kBAAkB,GAAGlB,gBAAgB,CAAC,eAAD,EAAkB,MAAOmB,SAAP,IAAmB;EACrF,IAAG;IACD,MAAM;MAAEf;IAAF,IAAW,MAAMH,KAAK,CAACmB,MAAN,CAAc,iBAAgBD,SAAU,EAAxC,CAAvB;IACA,OAAOf,IAAP;EACD,CAHD,CAIA,OAAME,GAAN,EAAU;IACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD;AACF,CARiD,CAA3C;AAUP,OAAO,MAAMe,gBAAgB,GAAGrB,gBAAgB,CAC9C,aAD8C,EAE9C,eAA2D;EAAA,IAApD;IAACsB,EAAD;IAAIZ,KAAJ;IAAWC,KAAX;IAAkBC,KAAlB;IAAyBC,GAAzB;IAA8BC,MAA9B;IAAsCC;EAAtC,CAAoD;EACzD,MAAM;IAAEX;EAAF,IAAW,MAAMH,KAAK,CAACsB,GAAN,CAAW,iBAAgBD,EAAG,EAA9B,EAAiC;IACtDZ,KADsD;IAEtDC,KAFsD;IAGtDC,KAHsD;IAItDC,GAJsD;IAKtDC,MALsD;IAMtDC;EANsD,CAAjC,CAAvB;EAQA,OAAOX,IAAP;AACD,CAZ6C,CAAzC;AAeP,MAAMoB,aAAa,GAAGzB,WAAW,CAAC;EAChC0B,IAAI,EAAE,UAD0B;EAEhCvB,YAFgC;EAGhCwB,QAAQ,EAAE,EAHsB;EAIhCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgB1B,kBAAkB,CAAC2B,SAAnC,EAA8C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/D;MACA,OAAOA,MAAM,CAACC,OAAd;IACD,CAHD;EAID;AAT+B,CAAD,CAAjC;AAYA,OAAO,MAAMC,cAAc,GAAIH,KAAD,IAAW;EACvC,OAAOA,KAAK,CAACI,QAAb;AACD,CAFM;AAIP,eAAeX,aAAa,CAACY,OAA7B"},"metadata":{},"sourceType":"module"}